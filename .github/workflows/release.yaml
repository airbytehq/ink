name: release

on:
  push:
    tags:
      - '*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install Poetry
        run: pip install poetry

      - name: Build project for distribution
        run: poetry build

      - name: Gather project metadata
        id: metadata
        run: |
          echo ::set-output python_version=$(cat .python-version);
          echo ::set-output ink_version=$(poetry version -s);
        
      - name: Log in to the Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.metadata.outputs.ink_version }}
          build-args: PYTHON_VERSION=${{ steps.metadata.outputs.python_version }}

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*,ink,_ink"
          draft: false
          prerelease: false
#
#      - name: Publish to PyPI
#        env:
#          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
#        run: poetry publish
